#简介
要写出方便管理的代码，最重要一点就是找出重复的地方然后优化。这是设计模式知识最有价值的地方。
本书的第一部分，我们探讨任何编程语言设计模式的历史和重要性。如果你对这些了解的很清楚，可以跳过“什么是设计模式”这一章。
设计模式最早追溯到一名叫做 Christopher Alexander的建筑师。他经常将自己解决城镇、建筑设计问题的经验写书出版。某天，Alexander意识到一些设计结构在反复使用中可以起到优化的效果。
通过与Sara Ishikawa和Murray Silverstein的合作，Alexander创造了一种模式语言，帮助人们以任何比例设计建造。这篇论文于1977年发表，名字是“A Pattern Language"(一种模式语言），后来还作为硬皮书完整出版。
约30年前，软件工程师们开始将Alexander写下的原理整理成关于设计模式的文献，给新入门的开发者参考，以改进编程技巧。设计模式背后的概念由此在软件工业中形成，尽管那个时候还不是非常正式。
最具有代表性的正式介绍设计模式在软件工程中应用的作品是1995年发表的一本书Design Patterns: Elements Of Reusable Object-Oriented Software(设计模式：面向对象软件中可复用的元素)。这本书的作者是 Erich Gamma, Richard Helm, Ralph Johnson 和 John Vlissides，这个团体后来被称作Gang of Four(简称GoF四人帮)。
GoF的作品对于推进设计模式的概念大有助益，该书描述了一系列的开发技巧、陷阱，并提供23种核心常用面向对象设计模式，沿用至今。我们将在“设计模式分类”这章进一步研究这些设计模式。
本书中，我们将看到一些流行的javascript设计模式，探讨为何某些设计模式更适合你当前的项目。请注意设计模式不仅对于vanilla javascript(即标准javascript代码)有效，对于抽象出来的一些库（如jQuery和dojo等）同样适用。在我们开始前，先看看软件设计中，“模式”的确切定义。
